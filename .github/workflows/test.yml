name: Test
on:
  pull_request:
    branches: [ master ]
  workflow_call:
    secrets:
      TOKEN:
        required: true
      APPLICATION_ID:
        required: true
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20'
      - id: go-cache-paths
        run: |
          echo "GOCACHE=$(go env GOCACHE)" >> $GITHUB_OUTPUT
          echo "GOMODCACHE=$(go env GOMODCACHE)" >> $GITHUB_OUTPUT
      - name: Go Build Cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.go-cache-paths.outputs.GOCACHE }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}
      - name: Go Mod Cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.go-cache-paths.outputs.GOMODCACHE }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
      - name: Build
        run: go build -v ./...
      - name: Test
        env:
          TOKEN: ${{ secrets.TOKEN }}
          APPLICATION_ID: ${{ secrets.APPLICATION_ID }}
        run: go test -v ./...
  test-fakediscord:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: isbang/compose-action@v1.4.1
        with:
          compose-file: "./compose.yaml"
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
      - id: go-cache-paths
        run: |
          echo "GOCACHE=$(go env GOCACHE)" >> $GITHUB_OUTPUT
          echo "GOMODCACHE=$(go env GOMODCACHE)" >> $GITHUB_OUTPUT
      - name: Go Build Cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.go-cache-paths.outputs.GOCACHE }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}
      - name: Go Mod Cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.go-cache-paths.outputs.GOMODCACHE }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
      - name: Build
        run: go build -v ./...
      - name: Test
        env:
          FAKEDISCORD: 1
        run: go test -v ./...
      - name: Docker logs
        if: failure()
        run: docker compose logs
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20'
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
